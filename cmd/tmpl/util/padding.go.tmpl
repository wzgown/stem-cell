package util

import (
	"bytes"
	"fmt"
	"io/ioutil"
	"strconv"

	"golang.org/x/text/encoding/simplifiedchinese"
	"golang.org/x/text/transform"
)

func PaddingNum(n int, fixWidth int) []byte {
	limit := 1
	for i := 0; i < fixWidth; i++ {
		limit = limit * 10
	}

	y := n / limit
	if y != 0 {
		// 数值超过最大宽度
		panic("FillNum failed, n exceed fixed width")
	}

	fmtstr := "%0" + strconv.Itoa(fixWidth) + "d"
	return []byte(fmt.Sprintf(fmtstr, n))
}

func PaddingString(s string, fixWidth int) []byte {
	if len(s) > fixWidth {
		s = s[:fixWidth]
	}
	fmtstr := "% " + strconv.Itoa(fixWidth) + "s"
	content := fmt.Sprintf(fmtstr, s)

	// 转成GBK
	bys, err := ioutil.ReadAll(transform.NewReader(bytes.NewReader([]byte(content)), simplifiedchinese.GBK.NewEncoder()))
	if err != nil {
		panic(err)
	}

	return bys
}
